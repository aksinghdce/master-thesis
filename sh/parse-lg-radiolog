#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
import time
import re

# TODO change to argv
# path to radio log file
file_name = 'logs/lg_g4c/2016-04-11_20:50/radio.log'

# an important line to us, can contain radio state transition
# or down- / upload packets information
re_line = re.compile(r'^.*(\d{2}:\d{2}:\d{2}\.\d{3}) V/LG-FASTDORMANCY.*\[([\w/]+)\] (.+)$')
# grabs current packets from rest group
re_rest = re.compile(r'^.*curr: TxPkts\((\d+)\), RxPkts\((\d+)\)$')

def print_state(state):
    if state['output']:
        print('\t' + str(state['radio']) + ', ' + str(state['tx']) + ', ' + str(state['rx']) + ';')
        state['output'] = False

state = {'time': None, 'radio': 0, 'tx': 0, 'rx': 0, 'output': False}

print('%% Cell radio state history (step is one second)')
print('%% column meaning:')
print('%%   1:\t is radio active,')
print('%%   2:\t tx packet count,')
print('%%   1:\t rx packet count')
print('%%')
print('RADIO_STATE = [')

with open(file_name) as f:

    for l in f:
        line_matches = re.match(re_line, l)

        if line_matches is None:
            continue

        # mark for output
        state['output'] = True

        # state (IDLE 0, DCH/FACH 1)
        state['radio'] = int(line_matches.group(2) != 'IDLE')
        # rest
        rest_matches = re.match(re_rest, line_matches.group(3))

        if rest_matches is not None:
            # tx, rx packet count
            state['tx'] = rest_matches.group(1)
            state['rx'] = rest_matches.group(2)

        # time
        t, ignore = line_matches.group(1).split('.')

        if state['time'] is None:
            state['time'] = t
        elif state['time'] != t:
            state['time'] = t
            print_state(state)

# if state is left for output after loop
print_state(state)
print('];')
