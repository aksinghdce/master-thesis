#!/bin/bash
# Parses a Android batteryinfo file and returns an array of unix timestamps.
# batteryinfo is an equivalent of batterystats service on devices running pre Kit-Kat OS versions.
#
# Outputs a octave / matlab vector containing Unix timestamps.
# These are grouped into pairs showing when the mobile radio was in active state.
# Ex.:
# a vector [0 100 500 1000]
# means that the radio was active between 0-100 and 500-1000 seconds from beggining of Unix epoche.
#

read -d '' awk_prog <<\EOF
{
    # remove leading dash
    str = substr($1, 2)
    # remove ms part
    str = substr(str, 1, length(str) - 6)
    # remove 'h', 'm', 's' characters
    gsub(/(h|m|s)/, " ", str)
    num = split(str, arr, " ")
    sec  = ts_start;
    mult = 1;

    for (i = num; i > 0; i--) {
        mult *= 60
        sec  -= arr[i] * mult;
    }

    print sec
}
EOF

# input file
in_file=$1

if [ ! -f $in_file ]; then
    echo 'You need to supply a valid file name'
    exit 1
fi

# ts_start â†’ report print timestamp; hi, low radio state transitions are given relative to this value
ts_start=$(head -n1 $in_file | awk '{print int($4 / 1000)}')
# radio state transition list
transitions=`grep 'mobile_radio' $in_file`    # filter lines containing mobile_radio

# convert 0h00m00s999ms notation to a offset in seconds
# and add the ts_start to it
echo [$(echo "${transitions[@]}" | awk -v ts_start="$ts_start" "$awk_prog")]
