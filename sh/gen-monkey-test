#!/usr/bin/env python3
# -*- coding: UTF-8 -*-
#
# gen-monkey-test
# Creates a monkey script containing a sequnce of user input events.
# Sequence is created based on some probalility and timeout settings.
#
from random import randint
from gen_monkey_lib import header, yesno, wait, touch, back, drag

conf = {
    'steps':            50,
    # probability of viewing item details, time spent on page
    'show':             (0.5, 2),
    # probability of drag event, how many items to scroll; tuple 1: from, 2: to a number is picked from this range
    #   from <= number <= to
    'drag':             (1, (1, 3)),
    # probability of sleep event, time in seconds
    'sleep':            (0.5, 2),
    # margin from screen top (starting point of items list)
    'margin_top':       170,
    'margin_left':      50,
    'element_height':   160,
}

# setup initial x, y values
x = conf['margin_left']
y = conf['margin_top']

header()

for step_no in range(conf['steps']):
    # wait
    if yesno(conf['sleep'][0]):
        wait(conf['sleep'][1])

    # take a look on items details
    if yesno(conf['show'][0]):
        touch(x, y)
        wait(conf['show'][1])
        back()

    # move pointer to next item in view (not list; so after scroll gets reset)
    y += conf['element_height']

    # on every step move the list one element further
    if yesno(conf['drag'][0]):
        wait(1)                  # timeout before scroll
        scroll_items = 1
        # how many items to scroll
        if isinstance(conf['drag'][1], tuple):
            scroll_items = randint(conf['drag'][1][0], conf['drag'][1][1])
        elif isinstance(conf['drag'][1], int):
            scroll_items = conf['drag'][1]

        drag(x, (conf['margin_top'] + scroll_items * conf['element_height']), x, conf['margin_top'])
        y = conf['margin_top']
